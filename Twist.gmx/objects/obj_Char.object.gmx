<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_CharBlue</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
grav = 0.2;
hsp = 0;
vsp = 0;
jumpSpeed = 5;
moveSpeed = 4;
currSide = 0;
enabled = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Basics
//Controls
if(enabled)
{
    keyRight = keyboard_check(ord("D"));
    keyLeft = -keyboard_check(ord("A"));
    keyJump = keyboard_check_pressed(ord("W"));
    keyTwist = keyboard_check_pressed(vk_space);
    
    //React to controls
    move = keyRight + keyLeft;
    hsp = move * moveSpeed;
    if(vsp &lt; 10) vsp += grav;
    if(place_meeting(x,y+1,obj_Floor))
    {
        vsp = keyJump * -jumpSpeed;
    }
    
    //Collisions
    if(place_meeting(x+hsp, y, par_Floor))
    {
        while(!place_meeting(x+sign(hsp),y, par_Floor))
        {
            x += sign(hsp);
        }
        hsp = 0;
    }
    x += hsp;
    
    if(place_meeting(x, y+vsp, par_Floor))
    {
        while(!place_meeting(x,y+sign(vsp), par_Floor))
        {
            y += sign(vsp);        
        }
        vsp = 0;
    }
    y += vsp;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Floor detection
if(enabled)
{
    //Twisting
    if(keyTwist)
    {
        switch(currSide)
            {
                case 0:
                    currSide++;
                    sprite_index = spr_CharGreen;
                    break;
                case 1:
                    currSide++;
                    sprite_index = spr_CharRed;
                    break;
                case 2:
                    currSide++;
                    sprite_index = spr_CharYellow;
                    break;
                case 3:
                    currSide = 0;
                    sprite_index = spr_CharBlue;
                    break;
            }
    }
    
    //Floor detection
    if(place_meeting(x-16, y+1, obj_FloorBlue)) &amp;&amp; (currSide !=0)
    {
        room_restart();
    }
    
    if(place_meeting(x-16, y+1, obj_FloorGreen)) &amp;&amp; (currSide !=1)
    {
        room_restart();
    }
    
    if(place_meeting(x-16, y+1, obj_FloorRed)) &amp;&amp; (currSide !=2)
    {
        room_restart();
    }
    
    if(place_meeting(x-16, y+1, obj_FloorYellow)) &amp;&amp; (currSide !=3)
    {
        room_restart();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
